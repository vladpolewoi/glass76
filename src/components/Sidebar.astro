---
// Get the list of routes in the pages directory
import fs from 'fs';
import path from 'path';

// Define the path to your pages directory
const pagesDir = path.resolve('./src/pages');

// Function to recursively fetch the directory structure
function getPages(dir) {
  const files = fs.readdirSync(dir);
  const routes = [];

  files.forEach((file) => {
    const filePath = path.join(dir, file);
    const stats = fs.statSync(filePath);

    if (stats.isDirectory()) {
      routes.push({ name: file, type: 'directory', children: getPages(filePath) });
    } else if (file.endsWith('.astro')) {
      routes.push({ name: file.replace('.astro', ''), type: 'file' });
    }
  });

  return routes;
}

// Get the pages recursively
const pages = getPages(pagesDir);
---

<aside class="sidebar">
  <ul>
    {pages.map((route) => (
      <li>
        <a href={`/${route.name}`}>
          {route.name}
        </a>

        {route.children && route.children.length > 0 && (
          <ul>
            {route.children.map((subRoute) => (
              <li>
                <a href={`/${route.name}/${subRoute.name}`}>
                  {subRoute.name}
                </a>
              </li>
            ))}
          </ul>
        )}
      </li>
    ))}
  </ul>
</aside>

<style>
  .sidebar {
    width: 250px;
    padding: 20px;
    background-color: #f4f4f4;
    border-right: 2px solid #ddd;
    height: 100vh;
    position: fixed;
    top: 0;
  }

  .sidebar ul {
    list-style: none;
    padding: 0;
  }

  .sidebar a {
    display: block;
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    font-weight: bold;
    margin: 5px 0;
  }

  .sidebar a:hover {
    background-color: #ddd;
  }

  .sidebar ul ul {
    padding-left: 20px;
  }
</style>
